"""Add missing columns to form_a_requirements

Revision ID: b1a5d80f1906
Revises: 
Create Date: 2025-06-04 12:18:50.656660

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mssql

# revision identifiers, used by Alembic.
revision: str = 'b1a5d80f1906'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('form_a', 'focus_recording',
               existing_type=mssql.BIT(),
               type_=sa.String(),
               existing_nullable=True)
    op.create_foreign_key(None, 'form_a', 'users', ['user_id'], ['user_id'])
    op.add_column('form_a_requirements', sa.Column('permission_letter', sa.String(length=255), nullable=True))
    op.add_column('form_a_requirements', sa.Column('has_clearance', sa.Boolean(), nullable=True))
    op.add_column('form_a_requirements', sa.Column('prior_clearance', sa.String(length=255), nullable=True))
    op.add_column('form_a_requirements', sa.Column('need_jbs_clearance1', sa.String(length=255), nullable=True))
    op.add_column('form_a_requirements', sa.Column('need_jbs_clearance', sa.String(length=255), nullable=True))
    op.add_column('form_a_requirements', sa.Column('prior_clearance1', sa.String(length=255), nullable=True))
    op.add_column('form_a_requirements', sa.Column('has_ethics_evidence', sa.Boolean(), nullable=True))
    op.add_column('form_a_requirements', sa.Column('ethics_evidence', sa.Boolean(), nullable=True))
    op.alter_column('form_a_requirements', 'user_id',
               existing_type=sa.VARCHAR(length=150, collation='SQL_Latin1_General_CP1_CI_AS'),
               type_=sa.String(length=255),
               nullable=True)
    op.alter_column('form_a_requirements', 'needs_permission',
               existing_type=mssql.BIT(),
               nullable=True)
    op.alter_column('form_a_requirements', 'company_requires_jbs',
               existing_type=mssql.BIT(),
               nullable=True)
    op.alter_column('form_a_requirements', 'research_tools_path',
               existing_type=sa.VARCHAR(length=255, collation='SQL_Latin1_General_CP1_CI_AS'),
               nullable=True)
    op.alter_column('form_a_requirements', 'proposal_path',
               existing_type=sa.VARCHAR(length=255, collation='SQL_Latin1_General_CP1_CI_AS'),
               nullable=True)
    op.alter_column('form_a_requirements', 'impact_assessment_path',
               existing_type=sa.VARCHAR(length=255, collation='SQL_Latin1_General_CP1_CI_AS'),
               nullable=True)
    op.create_foreign_key(None, 'form_a_requirements', 'users', ['user_id'], ['user_id'])
    op.drop_column('form_a_requirements', 'has_prior_clearance')
    op.drop_column('form_a_requirements', 'permission_letter_path')
    op.create_foreign_key(None, 'form_b', 'users', ['user_id'], ['user_id'])
    op.create_foreign_key(None, 'form_c', 'users', ['user_id'], ['user_id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'form_c', type_='foreignkey')
    op.drop_constraint(None, 'form_b', type_='foreignkey')
    op.add_column('form_a_requirements', sa.Column('permission_letter_path', sa.VARCHAR(length=255, collation='SQL_Latin1_General_CP1_CI_AS'), autoincrement=False, nullable=True))
    op.add_column('form_a_requirements', sa.Column('has_prior_clearance', mssql.BIT(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'form_a_requirements', type_='foreignkey')
    op.alter_column('form_a_requirements', 'impact_assessment_path',
               existing_type=sa.VARCHAR(length=255, collation='SQL_Latin1_General_CP1_CI_AS'),
               nullable=False)
    op.alter_column('form_a_requirements', 'proposal_path',
               existing_type=sa.VARCHAR(length=255, collation='SQL_Latin1_General_CP1_CI_AS'),
               nullable=False)
    op.alter_column('form_a_requirements', 'research_tools_path',
               existing_type=sa.VARCHAR(length=255, collation='SQL_Latin1_General_CP1_CI_AS'),
               nullable=False)
    op.alter_column('form_a_requirements', 'company_requires_jbs',
               existing_type=mssql.BIT(),
               nullable=False)
    op.alter_column('form_a_requirements', 'needs_permission',
               existing_type=mssql.BIT(),
               nullable=False)
    op.alter_column('form_a_requirements', 'user_id',
               existing_type=sa.String(length=255),
               type_=sa.VARCHAR(length=150, collation='SQL_Latin1_General_CP1_CI_AS'),
               nullable=False)
    op.drop_column('form_a_requirements', 'ethics_evidence')
    op.drop_column('form_a_requirements', 'has_ethics_evidence')
    op.drop_column('form_a_requirements', 'prior_clearance1')
    op.drop_column('form_a_requirements', 'need_jbs_clearance')
    op.drop_column('form_a_requirements', 'need_jbs_clearance1')
    op.drop_column('form_a_requirements', 'prior_clearance')
    op.drop_column('form_a_requirements', 'has_clearance')
    op.drop_column('form_a_requirements', 'permission_letter')
    op.drop_constraint(None, 'form_a', type_='foreignkey')
    op.alter_column('form_a', 'focus_recording',
               existing_type=sa.String(),
               type_=mssql.BIT(),
               existing_nullable=True)
    # ### end Alembic commands ###
