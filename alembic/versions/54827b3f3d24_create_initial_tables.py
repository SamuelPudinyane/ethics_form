"""create initial tables

Revision ID: 54827b3f3d24
Revises: 
Create Date: 2025-06-03 12:20:26.031191

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mssql

# revision identifiers, used by Alembic.
revision: str = '54827b3f3d24'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('form_d',
    sa.Column('form_id', sa.String(length=255), nullable=False),
    sa.Column('user_id', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('form_id')
    )
    op.create_table('form_b',
    sa.Column('form_id', sa.String(length=255), nullable=False),
    sa.Column('user_id', sa.String(length=255), nullable=False),
    sa.Column('need_permission', sa.Boolean(), nullable=True),
    sa.Column('permission_letter', sa.String(length=255), nullable=True),
    sa.Column('has_clearance', sa.Boolean(), nullable=True),
    sa.Column('prior_clearance', sa.String(length=255), nullable=True),
    sa.Column('has_ethics_evidence', sa.Boolean(), nullable=True),
    sa.Column('ethics_evidence', sa.String(length=255), nullable=True),
    sa.Column('proposal', sa.String(length=255), nullable=True),
    sa.Column('applicant_name', sa.String(length=120), nullable=True),
    sa.Column('student_number', sa.String(length=50), nullable=True),
    sa.Column('institution', sa.String(length=120), nullable=True),
    sa.Column('department', sa.String(length=120), nullable=True),
    sa.Column('degree', sa.String(length=120), nullable=True),
    sa.Column('study_title', sa.String(length=255), nullable=True),
    sa.Column('mobile', sa.String(length=30), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('supervisor', sa.String(length=120), nullable=True),
    sa.Column('supervisor_email', sa.String(length=120), nullable=True),
    sa.Column('project_description', sa.Text(), nullable=True),
    sa.Column('data_nature', sa.String(length=255), nullable=True),
    sa.Column('data_origin', sa.String(length=255), nullable=True),
    sa.Column('data_public', sa.Boolean(), nullable=True),
    sa.Column('public_evidence', sa.Text(), nullable=True),
    sa.Column('access_conditions', sa.Text(), nullable=True),
    sa.Column('personal_info', sa.Boolean(), nullable=True),
    sa.Column('data_anonymized', sa.String(length=20), nullable=True),
    sa.Column('anonymization_comment', sa.Text(), nullable=True),
    sa.Column('private_permission', sa.Boolean(), nullable=True),
    sa.Column('permission_details', sa.Text(), nullable=True),
    sa.Column('shortcomings_reported', sa.Boolean(), nullable=True),
    sa.Column('limitations_reporting', sa.Text(), nullable=True),
    sa.Column('methodology_alignment', sa.Boolean(), nullable=True),
    sa.Column('data_acknowledgment', sa.Text(), nullable=True),
    sa.Column('original_clearance', sa.String(length=20), nullable=True),
    sa.Column('participant_permission', sa.String(length=20), nullable=True),
    sa.Column('data_safekeeping', sa.Text(), nullable=True),
    sa.Column('risk_level', sa.String(length=20), nullable=True),
    sa.Column('risk_comments', sa.Text(), nullable=True),
    sa.Column('declaration_name', sa.String(length=150), nullable=True),
    sa.Column('full_name', sa.String(length=150), nullable=True),
    sa.Column('declaration_date', sa.DateTime(), nullable=True),
    sa.Column('submitted_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('supervisor_comments', sa.Text(), nullable=True),
    sa.Column('supervisor_signature', sa.String(length=255), nullable=True),
    sa.Column('rejected_or_accepted', sa.Boolean(), nullable=True),
    sa.Column('supervisor_date', sa.DateTime(), nullable=True),
    sa.Column('ethics_commettee_comments', sa.Text(), nullable=True),
    sa.Column('ethics_commettee_signature', sa.Text(), nullable=True),
    sa.Column('ethics_commettee_date', sa.DateTime(), nullable=True),
    sa.Column('ethics_commetee_status', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('form_id')
    )
    op.create_table('form_c',
    sa.Column('form_id', sa.String(length=255), nullable=False),
    sa.Column('user_id', sa.String(length=255), nullable=False),
    sa.Column('application_name', sa.String(length=100), nullable=True),
    sa.Column('student_number', sa.String(length=50), nullable=True),
    sa.Column('institution', sa.String(length=100), nullable=True),
    sa.Column('department', sa.String(length=100), nullable=True),
    sa.Column('degree', sa.String(length=100), nullable=True),
    sa.Column('project_title', sa.String(length=200), nullable=True),
    sa.Column('mobile_number', sa.String(length=20), nullable=True),
    sa.Column('email_address', sa.String(length=120), nullable=True),
    sa.Column('supervisor_name', sa.String(length=200), nullable=True),
    sa.Column('supervisor_email', sa.String(length=200), nullable=True),
    sa.Column('vulnerable', sa.Boolean(), nullable=True),
    sa.Column('age_under_18_or_over_65', sa.Boolean(), nullable=True),
    sa.Column('uj_employees', sa.Boolean(), nullable=True),
    sa.Column('non_vulnerable_context', sa.Boolean(), nullable=True),
    sa.Column('non_english', sa.Boolean(), nullable=True),
    sa.Column('own_students', sa.Boolean(), nullable=True),
    sa.Column('poverty', sa.Boolean(), nullable=True),
    sa.Column('no_education', sa.Boolean(), nullable=True),
    sa.Column('vulnerable_other_description', sa.Text(), nullable=True),
    sa.Column('vulnerable_comments', sa.Text(), nullable=True),
    sa.Column('consent_violation', sa.Boolean(), nullable=True),
    sa.Column('discomfiture', sa.Boolean(), nullable=True),
    sa.Column('deception', sa.Boolean(), nullable=True),
    sa.Column('sensitive_issues', sa.Boolean(), nullable=True),
    sa.Column('prejudicial_info', sa.Boolean(), nullable=True),
    sa.Column('intrusive', sa.Boolean(), nullable=True),
    sa.Column('illegal', sa.Boolean(), nullable=True),
    sa.Column('direct_social_info', sa.Boolean(), nullable=True),
    sa.Column('identifiable_records', sa.Boolean(), nullable=True),
    sa.Column('psychology_tests', sa.Boolean(), nullable=True),
    sa.Column('researcher_risk', sa.Boolean(), nullable=True),
    sa.Column('activity_other_description', sa.Text(), nullable=True),
    sa.Column('activity_comments', sa.String(), nullable=True),
    sa.Column('incentives', sa.Boolean(), nullable=True),
    sa.Column('participant_costs', sa.Boolean(), nullable=True),
    sa.Column('researcher_interest', sa.Boolean(), nullable=True),
    sa.Column('conflict_of_interest', sa.Boolean(), nullable=True),
    sa.Column('uj_premises', sa.Boolean(), nullable=True),
    sa.Column('uj_facilities', sa.Boolean(), nullable=True),
    sa.Column('uj_funding', sa.Boolean(), nullable=True),
    sa.Column('consideration_comments', sa.String(), nullable=True),
    sa.Column('vulnerable_groups', sa.String(), nullable=True),
    sa.Column('research_activities', sa.Text(), nullable=True),
    sa.Column('activities_comments', sa.Text(), nullable=True),
    sa.Column('additional_considerations', sa.Text(), nullable=True),
    sa.Column('considerations_comments', sa.Text(), nullable=True),
    sa.Column('risk_level', sa.String(length=20), nullable=True),
    sa.Column('risk_justification', sa.Text(), nullable=True),
    sa.Column('risk_benefits', sa.Text(), nullable=True),
    sa.Column('risk_mitigation', sa.Text(), nullable=True),
    sa.Column('summary_title', sa.Text(), nullable=True),
    sa.Column('executive_summary', sa.Text(), nullable=True),
    sa.Column('research_questions', sa.Text(), nullable=True),
    sa.Column('research_purpose', sa.Text(), nullable=True),
    sa.Column('secondary_data_info', sa.Text(), nullable=True),
    sa.Column('exemption_reason', sa.Text(), nullable=True),
    sa.Column('declaration_name', sa.String(length=200), nullable=True),
    sa.Column('full_name', sa.String(length=200), nullable=True),
    sa.Column('submission_date', sa.DateTime(), nullable=True),
    sa.Column('supervisor_comments', sa.Text(), nullable=True),
    sa.Column('supervisor_signature', sa.String(length=200), nullable=True),
    sa.Column('supervisor_date', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('rejected_or_accepted', sa.Boolean(), nullable=True),
    sa.Column('ethics_commettee_comments', sa.Text(), nullable=True),
    sa.Column('ethics_commettee_signature', sa.Text(), nullable=True),
    sa.Column('ethics_commettee_date', sa.DateTime(), nullable=True),
    sa.Column('ethics_commetee_status', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('form_id')
    )
    op.drop_table('sysdiagrams')
    op.create_foreign_key(None, 'form_a', 'users', ['user_id'], ['user_id'])
    op.alter_column('form_a_requirements', 'user_id',
               existing_type=sa.VARCHAR(length=150, collation='Latin1_General_CI_AS'),
               type_=sa.String(length=255),
               existing_nullable=False)
    op.create_foreign_key(None, 'form_a_requirements', 'users', ['user_id'], ['user_id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'form_a_requirements', type_='foreignkey')
    op.alter_column('form_a_requirements', 'user_id',
               existing_type=sa.String(length=255),
               type_=sa.VARCHAR(length=150, collation='Latin1_General_CI_AS'),
               existing_nullable=False)
    op.drop_constraint(None, 'form_a', type_='foreignkey')
    op.create_table('sysdiagrams',
    sa.Column('name', sa.NVARCHAR(length=128, collation='Latin1_General_CI_AS'), autoincrement=False, nullable=False),
    sa.Column('principal_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('diagram_id', sa.INTEGER(), sa.Identity(always=False, start=1, increment=1), autoincrement=True, nullable=False),
    sa.Column('version', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('definition', mssql.VARBINARY(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('diagram_id', name='PK__sysdiagr__C2B05B61070B0E07')
    )
    op.drop_table('form_c')
    op.drop_table('form_b')
    op.drop_table('form_d')
    # ### end Alembic commands ###
